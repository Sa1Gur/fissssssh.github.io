<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>docker on fissssssh</title><link>https://fissssssh.com/tags/docker/</link><description>Recent content in docker on fissssssh</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 09 Jul 2022 12:21:08 +0800</lastBuildDate><atom:link href="https://fissssssh.com/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Run Clash With Docker Desktop</title><link>https://fissssssh.com/posts/run-clash-with-docker-desktop/</link><pubDate>Sat, 09 Jul 2022 12:21:08 +0800</pubDate><guid>https://fissssssh.com/posts/run-clash-with-docker-desktop/</guid><description>创建docker-compose.yml version: &amp;#39;3.9&amp;#39; services: clash: container_name: core image: dreamacro/clash volumes: - ./config.yaml:/root/.config/clash/config.yaml:ro ports: - &amp;#34;7890:7890&amp;#34; # proxy port(change port to your config.yaml) - &amp;#34;9090:9090&amp;#34; # api port(change port to your config.yaml) restart: always yacd: container_name: web_ui image: haishanh/yacd ports: - &amp;#34;80:80&amp;#34; # change port which you want depends_on: - clash restart: always 启动 把你的clash配置文件 config.yaml 和 docker-compose.yml 放入同一个文件夹
然后执行 docker compose up -d 启动
打开 http://localhost:&amp;lt;your_yacd_exposed_port&amp;gt; 进入web UI 可以管理切换clash的节点和代理模式
设置系统代理 在 系统设置 -&amp;gt; 网络和Internet -&amp;gt; 代理 -&amp;gt; 手动设置代理 中填写clash暴露的http端口</description></item><item><title>Create Redis Cluster by Docker Compose</title><link>https://fissssssh.com/posts/create-redis-cluster-by-docker-compose/</link><pubDate>Tue, 21 Jun 2022 15:52:38 +0800</pubDate><guid>https://fissssssh.com/posts/create-redis-cluster-by-docker-compose/</guid><description>Create a docker-compose.yml version: &amp;#34;3.9&amp;#34; services: redis-1: image: redis:7.0.2-alpine container_name: redis-1 ports: - &amp;#34;6371:6371&amp;#34; - &amp;#34;16371:16371&amp;#34; volumes: - ./node-1/data:/data - ./node-1/conf/redis.conf:/etc/redis/redis.conf networks: redis: ipv4_address: 172.28.0.11 command: - &amp;#34;redis-server&amp;#34; - &amp;#34;/etc/redis/redis.conf&amp;#34; redis-2: image: redis:7.0.2-alpine container_name: redis-2 ports: - &amp;#34;6372:6372&amp;#34; - &amp;#34;16372:16372&amp;#34; volumes: - ./node-2/data:/data - ./node-2/conf/redis.conf:/etc/redis/redis.conf networks: redis: ipv4_address: 172.28.0.12 command: - &amp;#34;redis-server&amp;#34; - &amp;#34;/etc/redis/redis.conf&amp;#34; redis-3: image: redis:7.0.2-alpine container_name: redis-3 ports: - &amp;#34;6373:6373&amp;#34; - &amp;#34;16373:16373&amp;#34; volumes: - ./node-3/data:/data - ./node-3/conf/redis.conf:/etc/redis/redis.conf networks: redis: ipv4_address: 172.</description></item></channel></rss>